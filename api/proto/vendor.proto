syntax = "proto3";

package vendor;

option go_package = "api/vendorpb;vendorpb";

import "google/protobuf/timestamp.proto";

// =====================
// Common Vendor Message
// =====================
message Vendor {
  string id = 1;
  string s_no = 2;
  string from_account_type = 3;
  string status = 4;
  string project = 5;
  string account_name = 6;
  string short_name = 7;
  string parent = 8;
  string account_number = 9;
  string name_of_bank = 10;
  string ifsc_code_id = 11;
  string ifsc_code = 12;
  string vendor_type = 13;
  string vendor_code = 14;
  string vendor_name = 15;
  string vendor_email = 16;
  string vendor_mobile = 17;
  string activity_type = 18;
  string vendor_nick_name = 19;
  string email = 20;
  string mobile = 21;
  string gstin = 22;
  string pan = 23;
  string pin = 24;
  string country_id = 25;
  string state_id = 26;
  string city_id = 27;
  string country_name = 28;
  string state_name = 29;
  string city_name = 30;
  string msme_classification = 31;
  string msme = 32;
  string msme_registration_number = 33;
  string msme_start_date = 34;
  string msme_end_date = 35;
  string material_nature = 36;
  string gst_defaulted = 37;
  string section_206AB_verified = 38;
  string benificiary_name = 39;
  string remarks_address = 40;
  string common_bank_details = 41;
  string income_tax_type = 42;
  repeated string file_path = 43;
  string active = 44;

  google.protobuf.Timestamp created_at = 45;
  google.protobuf.Timestamp updated_at = 46;
}

// ======================
// Requests and Responses
// ======================

// Create
message CreateVendorRequest {
  Vendor vendor = 1;
}
message CreateVendorResponse {
  Vendor vendor = 1;
}

// Get One
message GetVendorRequest {
  string id = 1;
}
message GetVendorResponse {
  Vendor vendor = 1;
}

// List
message ListVendorsRequest {
  int32 page = 1;
  int32 page_size = 2;
  string search = 3;
}
message ListVendorsResponse {
  repeated Vendor vendors = 1;
  int32 total = 2;
}

// Update
message UpdateVendorRequest {
  Vendor vendor = 1;
}
message UpdateVendorResponse {
  Vendor vendor = 1;
}

// Delete
message DeleteVendorRequest {
  string id = 1;
}
message DeleteVendorResponse {
  bool success = 1;
}

// Import
message ImportVendorsRequest {
  bytes file_content = 1; // excel/csv file bytes
  string file_name = 2;
}
message ImportVendorsResponse {
  bool success = 1;
  string message = 2;
}

// ======================
// Service Definition
// ======================
service VendorService {
  rpc CreateVendor (CreateVendorRequest) returns (CreateVendorResponse);
  rpc GetVendor (GetVendorRequest) returns (GetVendorResponse);
  rpc ListVendors (ListVendorsRequest) returns (ListVendorsResponse);
  rpc UpdateVendor (UpdateVendorRequest) returns (UpdateVendorResponse);
  rpc DeleteVendor (DeleteVendorRequest) returns (DeleteVendorResponse);

  // Import from Excel/CSV
  rpc ImportVendors (ImportVendorsRequest) returns (ImportVendorsResponse);
}
